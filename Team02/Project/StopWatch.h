#pragma once
#include "Mof.h"

namespace sip
{
	// ********************************************************************************
	/// <summary>
	/// ストップウォッチクラス
	/// </summary>
	// ********************************************************************************
	class CStopWatch
	{
	private:

		bool m_bStart;   //! 開始フラグ

		float m_Time;    //! 経過時間(秒)

	public:

		// ********************************************************************************
		/// <summary>
		/// コンストラクタ
		/// </summary>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		CStopWatch(void);

		// ********************************************************************************
		/// <summary>
		/// デストラクタ
		/// </summary>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		~CStopWatch(void);

		// ********************************************************************************
		/// <summary>
		/// 開始
		/// </summary>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		void Start(void);

		// ********************************************************************************
		/// <summary>
		/// 停止
		/// </summary>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		void Stop(void);

		// ********************************************************************************
		/// <summary>
		/// 再開
		/// </summary>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		void Resume(void);

		// ********************************************************************************
		/// <summary>
		/// リセット
		/// </summary>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		void Reset(void);

		// ********************************************************************************
		/// <summary>
		/// 更新
		/// </summary>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		void Update(void);

		// ********************************************************************************
		/// <summary>
		/// 開始フラグの取得
		/// </summary>
		/// <returns>開始フラグ</returns>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		bool IsStart(void) const;

		// ********************************************************************************
		/// <summary>
		/// 現在の経過時間取得。単位は秒
		/// </summary>
		/// <returns>経過時間(秒)</returns>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		float GetTime(void) const;

		// ********************************************************************************
		/// <summary>
		/// 経過時間の設定。単位は秒
		/// </summary>
		/// <param name="t">設定する時間(秒)</param>
		/// <created>いのうえ,2020/09/10</created>
		/// <changed>いのうえ,2020/09/10</changed>
		// ********************************************************************************
		void SetTime(const float& t);
	};
}
