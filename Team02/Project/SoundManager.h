#pragma once
#include "Mof.h"
#include <array>

// ********************************************************************************
/// <summary>
/// SE名列挙
/// </summary>
// ********************************************************************************
enum SE_Name
{
	SE_Shot,
	SE_PanelSet,
    SE_Count,
};

// ********************************************************************************
/// <summary>
/// BGM名列挙
/// </summary>
// ********************************************************************************
enum BGM_Name
{
    BGM_Count = 1,
};

constexpr int SoundPoolCount = 10; //! プール数

// ********************************************************************************
/// <summary>
/// サウンド管理クラス
/// </summary>
// ********************************************************************************
class CSoundManager
{
private:

    CSoundBuffer m_BGMBuffer[BGM_Count];                     //! BGMバッファ配列
    CSoundBuffer m_SEBufferPool[SE_Count][SoundPoolCount];   //! SEバッファプール配列

    // ********************************************************************************
    /// <summary>
    /// コンストラクタ
    /// </summary>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    CSoundManager(void);

public:
    
    // ********************************************************************************
    /// <summary>
    /// デストラクタ
    /// </summary>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    ~CSoundManager(void);

    // ********************************************************************************
    /// <summary>
    /// インスタンスの取得
    /// </summary>
    /// <returns>マネージャー</returns>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    static CSoundManager& GetInstance(void);

    // ********************************************************************************
    /// <summary>
    /// ファイルの読み込み
    /// </summary>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    void Load(void);

    // ********************************************************************************
    /// <summary>
    /// 更新
    /// </summary>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    void Update(void);

    // ********************************************************************************
    /// <summary>
    /// 解放
    /// </summary>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    void Release(void);

    // ********************************************************************************
    /// <summary>
    /// 再生可能サウンドエフェクトの取得
    /// </summary>
    /// <param name="se">取得するSE</param>
    /// <returns>再生可能SEデータポインタ</returns>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    CSoundBuffer* GetSE(SE_Name se);

    // ********************************************************************************
    /// <summary>
    /// サウンドエフェクトの取得
    /// </summary>
    /// <param name="se">取得するSE</param>
    /// <param name="j">取得するSEのプール番号</param>
    /// <returns>SEデータポインタ</returns>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    CSoundBuffer* GetSE(SE_Name se, int j);

    // ********************************************************************************
    /// <summary>
    /// BGMデータの取得
    /// </summary>
    /// <param name="bgm">取得するBGM</param>
    /// <returns>BGMデータポインタ</returns>
    /// <created>いのうえ,2021/02/02</created>
    /// <changed>いのうえ,2021/02/02</changed>
    // ********************************************************************************
    CSoundBuffer* GetBGM(BGM_Name bgm);
};

#define g_SoundManager CSoundManager::GetInstance()